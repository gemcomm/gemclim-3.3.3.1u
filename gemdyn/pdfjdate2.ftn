!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!**s/r pdfjdate2 - number of days since "Mod_runstrt_S(year) - 1"
      subroutine pdfjdate2 (jdate,yyyy,mo,dd,hh,mm,ss)
      implicit none
      real*8 jdate
      integer yyyy,mo,dd,hh,mm,ss

!author 
!    Michel Desgagne - RPN - ?????
!
!revision
! v3_32 - Dugas B.          - use newdate/difdatr rather than jd inline function
!
!arguments I/O
! jdate                 (O) - number of days since Jan 01, 00Z of "Mod_runstrt_S(year) - 1"
! "yyyy mo dd hh mm ss" (I) - calendar date to compare with

!  calculate the number of days since the first day of the year before
!  this run was started. This can account for leap-years support, which 
!  can be turned ON or OFF via calls to ACCEPT_LeapYear() and
!  Ignore_LeapYear(), respectively
!!
#include "modconst.cdk"

      integer, save :: stamp0
      integer ier, TIM1, stamp1
      integer, parameter :: TIM2=0, MOD=3
      logical, save :: done=.false.

      integer newdate
      external newdate, difdatr

      jdate = -1.0_8

      if (.not.done) then
         ! initialization of stamp0 to "Mod_runstrt_S(year) - 1"
         read(Mod_runstrt_S,'(I4)') TIM1
         if (TIM1 > 0) TIM1 = TIM1-1
         TIM1 = tim1*10000+0101
         ier = newdate( stamp0, TIM1,TIM2, MOD )
         if (ier /= 0) then
            print *, 'pdfjdate2: error in call to newdate(+3), tim1,tim2= ',TIM1,TIM2
            stop ' in pdfjdate2'
         endif
         done = .true.
      endif

      TIM1 = (yyyy*100+mo)*100+dd
      ier = newdate( stamp1, TIM1,TIM2, MOD )

      if (ier /= 0) then
         print *, 'pdfjdate2: error in call to newdate(+3), tim1,tim2= ',TIM1,TIM2
         stop ' in pdfjdate2'
      endif

      ! number of hours between "yyyy mo dd" and "Mod_runstrt_S(year) - 1"
      call difdatr( stamp1,stamp0, jdate )

      ! add "hh mm ss" hours to jdate and convert to days
      jdate = (jdate+hh+(mm*60+ss)/3600.0_8)/24.0_8

      return
      end

