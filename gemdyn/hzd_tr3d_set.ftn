!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
***s/r hzd_set - Compute diffusion operator matrix for tracers
*
#include "model_macros_f.h"
*
      subroutine hzd_tr3d_set
      implicit none
*
*author    
*     B. Dugas, RPN - August 2008
*
*revision
* v3_35 - Dugas B.          - initial version (based on HZD_SET)
*
*object
*     see id section
*       
*arguments
*     none
*
*implicits
#include "glb_ld.cdk"
#include "glb_pil.cdk"
#include "geomg.cdk"
#include "hzd.cdk"
#include "dcst.cdk"
#include "fft.cdk"
#include "trp.cdk"
#include "opr.cdk"
#include "cstv.cdk"
#include "lun.cdk"
#include "ptopo.cdk"
*      
      integer i,j,istat,dim,dpwr
      real*8, dimension(:) , allocatable :: wk1_8,h0_8
      real*8 c_8
      real*8 ZERO_8, ONE_8, HALF_8
      PARAMETER( ZERO_8 = 0.0 , ONE_8  = 1.0 , HALF_8 = 0.5 )
**
*     ---------------------------------------------------------------
*
*     Set the length of the work matrices to the region without 
*     the pilot region for LAM
*
      if (Hzd_ho_L) then
*
*     initialize operator nord_south for tracer grids
*                              for high-order diffusion-solver
*
         allocate( h0_8(G_nj*2) )

         if (Hzd_difva_L) then
            do i = 1, G_nj
               h0_8(i)  = ONE_8 / (ONE_8 + 2*((cos(G_yg_8(i)))**2))
            enddo
         else
            h0_8 = ONE_8
         endif

         dpwr= Hzd_tr3d_pwr / 2
         dim = (trp_22max-trp_22min+1)
         dim = dim * G_nj * dpwr*dpwr

         call hpalloc(Hzd_tr3d_as_8_    , dim, istat, 8)
         call hpalloc(Hzd_tr3d_cs_8_    , dim, istat, 8)
         call hpalloc(Hzd_tr3d_deltas_8_, dim, istat, 8)

         c_8= 1.E+32
         if(max(G_ni,2*G_nj).eq.G_ni) then
            do i = 1+Lam_pil_w, G_ni-Lam_pil_e
               c_8 = min(c_8,(G_xg_8(i+1) - G_xg_8(i)))
            end do
         else
            do j= 1+Lam_pil_s,G_nj-Lam_pil_n
               c_8 = min(c_8,(G_yg_8(j+1) - G_yg_8(j)))
            end do
         endif

         hzd_tr3d_lnR   = log(1.- Hzd_tr3d_lnR)
         Hzd_tr3d_cdiff = (2./c_8)**Hzd_tr3d_pwr / (-Hzd_tr3d_lnR)

         if (Lun_out.gt.0) then
            write(Lun_out,1010) 
     $      (Dcst_rayt_8**Hzd_Tr3d_pwr)/(Cstv_dt_8*Hzd_Tr3d_cdiff),Hzd_Tr3d_pwr
         endif

         allocate (wk1_8(3*G_nj))

         do j = 1,3*G_nj
            wk1_8 (j) = ZERO_8
         enddo

         do j = 1+Lam_pil_s, G_nj-Lam_pil_n
            wk1_8 (       j) = ZERO_8
            wk1_8 (  G_nj+j) = Opr_opsyp0_8(G_nj+j)*h0_8(j)/cos(G_yg_8(j))**2
            wk1_8 (2*G_nj+j) = ZERO_8
         end do

         if (Hzd_difva_L) then

            if (Lun_debug_L) print *,'HZD_DELPWR on tracer'
            call hzd_delpwr (Hzd_tr3d_as_8,Hzd_tr3d_cs_8,Hzd_tr3d_deltas_8,
     $                    dpwr,trp_22min,trp_22max,G_nj,trp_22n,trp_22n0,
     $                    Opr_opsyp0_8,Hzd_yp2su_8,wk1_8,
     $                    Opr_xeval_8, Hzd_tr3d_cdiff)

         else

            if (Lun_debug_L) print *,'HZD_DELPWR on tracer'
            call hzd_delpwr (Hzd_tr3d_as_8,Hzd_tr3d_cs_8,Hzd_tr3d_deltas_8,
     $                    dpwr,trp_22min,trp_22max,G_nj,trp_22n,trp_22n0,
     $                    Opr_opsyp0_8,Opr_opsyp2_8,wk1_8,
     $                    Opr_xeval_8, Hzd_tr3d_cdiff)

         endif

         deallocate( h0_8,wk1_8 )

      else
         if (Lun_out.gt.0) write(Lun_out,1003)
      endif
*
 1001 format(/,'INITIALIZATING ',a,' HORIZONTAL DIFFUSION ', 
     $         '(S/R HZD_TR3D_SET)',/,60('='))
 1003 format(/,'NO HORIZONTAL DIFFUSION REQUIRED (tr3d)',/,32('='))
 1010 format (3X,'Diffusion Coefficient (tr3d) = ',e22.14,' m**',i1,'/sec' )
*
*     ---------------------------------------------------------------
      return
      end
