#if defined(DOC)
!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
*COMMON BLOCK /BUSESC/
*          contains "CHARACTER" type variables pertaining to the 3 buses
*
* ENTDC        : description of the variables included in the entry     bus
* DYNDC        : description of the variables included in the dynamics  bus
* PERDC        : description of the variables included in the permanent bus
* VOLDC        : description of the variables included in the volatile  bus
* ENTNM    (1) : variable name (16 characters long) for the entry     bus
*          (2) : output     "  (4      "       "  )  "   "     "       "
* DYNNM    (1) : variable name (16 characters long) for the dynamics  bus
*          (2) : output     "  (4      "       "  )  "   "     "       "
* PERNM    (1) : variable name (16 characters long) for the permanent bus
*          (2) : output     "  (4      "       "  )  "   "     "       "
* VOLNM    (1) : variable name (16 characters long) for the volatile  bus
*          (2) : output     "  (4      "       "  )  "   "     "       "
*
*COMMON BLOCK /BUSESL/
*          contains "LOGICAL" type variables pertaining to the 3 buses
*
* BUSLCK   .TRUE.  : the physics setup is complete and the structure of
*                    the buses can no longer be modified
*          .FALSE. : the physics setup is not yet complete and the
*                    structure of the buses can still be modified
*          (set in PHYDEBU3)
*
*COMMON BLOCK /BUSESI/
*           contains "INTEGER" type variables pertaining to the 3 buses
*
* ENTPAR    (1) : beginning of each field within the entry    bus
*           (2) : length    "   "     "      "    "     "      "
*           (3) : 0 if the field needs not be initialized by the dynamics
*                 1 "   "    "   must  be initialized by the dynamics
*           (4) : 0 if the field is NOT on a staggered vertical grid
*               : 1 if the field is     on a staggered vertical grid
*           (5) : length of each field divided by multiplicity factor
*                 (either ni or ni*nk)
*           (6) : multiplicity factor
*           (7) : number of levels (1 or nk)
*           (8) : number of mosaic levels
*
* DYNPAR    (1) : beginning of each field within the dynamics bus
*           (2) : length    "   "     "      "    "     "      "
*           (3) : 0 if the field needs not be initialized by the dynamics
*                 1 "   "    "   must  be initialized by the dynamics
*           (4) : 0 if the field is NOT on a staggered vertical grid
*               : 1 if the field is     on a staggered vertical grid
*           (5) : length of each field divided by multiplicity factor
*                 (either ni or ni*nk)
*           (6) : multiplicity factor
*           (7) : number of levels (1 or nk)
*           (8) : number of mosaic levels
*
* PERPAR    (1) : beginning of each field within the permanent bus
*           (2) : length    "   "     "      "    "     "      "
*           (3) : 0 if the field needs not be initialized by the dynamics
*                 1 "   "    "   must  be initialized by the dynamics
*           (4) : 0 if the field is NOT on a staggered vertical grid
*               : 1 if the field is     on a staggered vertical grid
*           (5) : length of each field divided by multiplicity factor
*                 (either ni or ni*nk)
*           (6) : multiplicity factor
*           (7) : number of levels (1 or nk)
*           (8) : number of mosaic levels
*
* VOLPAR    (1) : beginning of each field within the volatile  bus
*           (2) : length    "   "     "      "    "     "      "
*           (3) : 0 if the field needs not be initialized by the dynamics
*                 1 "   "    "   must  be initialized by the dynamics
*           (4) : 0 if the field is NOT on a staggered vertical grid
*               : 1 if the field is     on a staggered vertical grid
*           (5) : length of each field divided by multiplicity factor
*                 (either ni or ni*nk)
*           (6) : multiplicity factor
*           (7) : number of levels (1 or nk)
*           (8) : number of mosaic levels
*         
* ENTTOP    number of variables within the entry     bus
* DYNTOP    number of variables within the dynamics  bus
* PERTOP    number of variables within the permanent bus
* VOLTOP    number of variables within the volatile  bus
* ENTSPC    total length of the entry     bus
* DYNSPC    total length of the dynamics  bus
* PERSPC    total length of the permanent bus
* VOLSPC    total length of the volatile  bus
*
#endif
      integer maxbus
      parameter (maxbus=1000)
*
      character*16  entnm(maxbus,2),dynnm(maxbus,2),
     +             pernm(maxbus,2),volnm(maxbus,2)
      character*60 entdc(maxbus),dyndc(maxbus),
     +             perdc(maxbus),voldc(maxbus)
      common /busesc/ entnm, dynnm, pernm, volnm, 
     +                entdc, dyndc, perdc, voldc
*
      logical buslck
      common /busesl/ buslck
      integer entpar(maxbus,8),dynpar(maxbus,8),
     +        perpar(maxbus,8),volpar(maxbus,8)
      integer enttop,dyntop,pertop,voltop,
     +        entspc,dynspc,perspc,volspc
      common /busesi/ entpar,dynpar,perpar,volpar,
     +                enttop,dyntop,pertop,voltop,
     +                entspc,dynspc,perspc,volspc
*
*
