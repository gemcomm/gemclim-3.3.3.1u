!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
***PROGRAM FESERI
*
      SUBROUTINE FESERI
#include "impnone.cdk"
*
*Author
*          M. Lepine   (Mar 87)
*
*Revision
* 001      B. Reid  (June 89) - Zonal diagnostics
* 002      N. Brunet  (May90)
*                Standardization of thermodynamic functions
* 003      N. Brunet  (May91)
*                New version of thermodynamic functions
*                and file of constants
* 004      B. Bilodeau  (July 1991)- Adaptation to UNIX
* 005      G. Pellerin (April 1992) -Adaptation to PASTEMP,
*                            deleted calls to zonal diagnostics.
* 006      G. Pellerin (April 1994) -Open sequential file with
*                                    options +FTN +UNF
* 007      B. Bilodeau (June 1997) - IBM 32 bit to IEEE 32 bit
*                                    format conversion
* 008      B. Bilodeau (July 1998) - Automate IBM32 to IEEE conversion
* 009      B. Bilodeau (March 2007) - Compression
*
*Object
*          to take the raw binary "T" files created by FEMAIN
*          and convert them to RPN standard file format.
*          The output is the time-series "S" file.
*
*Arguments
*          None.
*
*FILES
*     TAPE64  input file containing POINTS,SURFACE,PROFILS
*     TAPE35  reformatted standard random output for graphics
*             on time series (PASTEMP)
*
*MODULES
      EXTERNAL CCARD
      EXTERNAL FSTFRM, FSTOUV
      EXTERNAL FCLOS
      EXTERNAL SERGDIM
      EXTERNAL MEMOIR
      EXTERNAL SERIE
      EXTERNAL INCTPHY
      INTEGER EXDB,EXFIN,FNOM
      EXTERNAL EXDB,EXFIN,FNOM
*
**
#include "consphy.cdk"
*
      INTEGER STATUS
      INTEGER FSTFRM, FSTOUV, INBR
      CHARACTER *128, DEFO(7),LISTL(7),LFN(7)
      LOGICAL ECHOT,COMPRESS
      INTEGER INPUNIT,SERSTD,IER
      INTEGER JUNK,MSTAT,MSURF,MPROF
      LOGICAL ERREUR
      SAVE STATUS,INPUNIT,SERSTD,LISTL,DEFO,LFN
      DATA STATUS /0/
      DATA INPUNIT,SERSTD / 64 , 35 /
      DATA LISTL/'ISERIAL','OMSORTI','I','L','DATE','ECHOT','COMPRESS'/
      DATA DEFO/'TAPE64','TAPE35','$IN','$OUT','OPRUN','OUI','OUI'/
      DATA LFN/'TAPE64','TAPE35','$IN','$OUT','NON','NON','NON'/
*
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*
*     LISTL = POSITION USAGER ISERIAL( TAPE64 , SEQUENTIEL ) ,
*             OMSORTI( TAPE35 , STD ) , I , L , DATE
*     DEFO = LISTE DES DEFAUTS ISERIAL ,  OMSORTI , I , L , DATE
*                            TAPE64 , TAPE35 , $IN , $OUT , OPRUN
*     LFN = LISTE QUE L USAGER PROPOSE POUR REMPLACER
*     7 = NOMBRE DE LFN
*
      CALL CCARD ( LISTL , DEFO , LFN , 7 , -1 )
      IER = FNOM ( INPUNIT , LFN(1) , 'SEQ+FTN+UNF' , 0 )
      IER = FNOM ( SERSTD , LFN(2) , 'RND' , 0 )
      IER = FNOM ( 5 , LFN(3) , 'SEQ' , 0 )
      IER = FNOM ( 6 , LFN(4) , 'SEQ' , 0 )
      ECHOT = LFN(6).EQ.'OUI'
      COMPRESS = LFN(7).EQ.'OUI'
*
      JUNK = EXDB ( 'FESERI' , 'V2.2' ,  LFN(5) )
*
*
*     INITIALISATION DU COMMON 'CTESPHY'
*
      CALL INCTPHY
*
*
      CALL SERGDIM(INPUNIT,MSTAT,MSURF,MPROF,ERREUR)
*
      IF (ERREUR) THEN
        STATUS = 4
        GOTO 2
      ENDIF
*
      CALL SERDBU
*
      INBR = FSTOUV (SERSTD , 'RND')
*
      CALL SERIE(INPUNIT,SERSTD,STATUS,ECHOT,COMPRESS)
      IF (STATUS .EQ. 0) THEN
        INBR = FSTFRM (SERSTD)
        CALL FCLOS ( INPUNIT )
         GOTO 40
      ENDIF
  2   CONTINUE
      INBR = FSTFRM (SERSTD)
      CALL FCLOS ( INPUNIT )
      GOTO (10,20,30,30) STATUS
  10    WRITE(6,*) '----AUCUN POINT POUR LES SERIES'
      GOTO 40
  20    WRITE(6,*) '----PAS DE SRF POUR LES SERIES'
      GOTO 40
  30    WRITE(6,*) '----ERREUR POUR LES SERIES'
  40  CONTINUE
*
60    IF (STATUS.NE.0) THEN
         JUNK = EXFIN ( 'FESERI' , 'ERREUR' , 'NON' )
      ELSE
         JUNK = EXFIN ( 'FESERI' , 'FIN NORMALE' , 'NON' )
      ENDIF
*
      RETURN
      END
